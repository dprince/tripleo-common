---
version: '2.0'
name: tripleo.baremetal.v1
description: TripleO Baremetal Workflows

workflows:

  set_node_state:
    type: direct

    input:
      - node_uuid
      - move_to_state
      - target_state

    tasks:

      set_provision_state:
        on-success: wait_for_provision_state
        action: ironic.node_set_provision_state node_uuid=<% $.node_uuid %> state=<% $.move_to_state %>

      wait_for_provision_state:
        action: ironic.node_get node_id=<% $.node_uuid %>
        timeout: 9
        retry:
          delay: 1
          count: 10
          continue-on: <% task(wait_for_provision_state).result.provision_state != $.target_state %>

  # Take nodes JSON and create nodes in a "managable" state
  register:
    type: direct

    input:
     - service_host
     - nodes_json
     - remove: False
     - queue_name: tripleo

    tasks:
      register_nodes:
        action: tripleo.register_nodes
        on-success: set_nodes_managed
        input:
           service_host: <% $.service_host %>
           nodes_json: <% $.nodes_json %>
           remove: <% $.remove %>
        publish:
          registered_nodes: <% task(register_nodes).result %>

      set_nodes_managed:
        on-success: send_message
        with-items: node in <% $.registered_nodes %>
        workflow: tripleo.baremetal.v1.set_node_state node_uuid=<% $.node.uuid %> move_to_state='manage' target_state='managable'

      send_message:
        action: zaqar.queue_post
        input:
          queue_name: <% $.queue_name %>
          messages:
            body:
              name: tripleo.baremetal.v1.register
              execution_id: <% execution().id %>
              data:
                status: SUCCESS

  # Take a list of nodes and move them to "available"
  provide:
    type: direct

    input:
     - node_uuids
     - queue_name: tripleo

      set_nodes_available:
        on-success: send_message
        with-items: node in <% $.registered_nodes %>
        workflow: tripleo.baremetal.v1.set_node_state node_uuid=<% $.node.uuid %> move_to_state='provide' target_state='available'

      send_message:
        action: zaqar.queue_post
        input:
          queue_name: <% $.queue_name %>
          messages:
            body:
              name: tripleo.baremetal.v1.provide
              execution_id: <% execution().id %>
              data:
                status: SUCCESS

  # Take a list of nodes and move them through introspection.
  introspect:
    type: direct

    input:
     - node_uuids
     - queue_name: tripleo

    tasks:

      start_introspection:
        on-success: wait_for_introspection_to_finish
        with-items: uuid in <% $.node_uuids %>
        action: baremetal_introspection.introspect uuid=<% $.uuid %>

      wait_for_introspection_to_finish:
        on-success: send_message
        action: baremetal_introspection.wait_for_finish
        input:
          node_uuids: <% $.node_uuids %>
        publish:
          introspected_nodes: <% task(wait_for_introspection_to_finish).result %>
      send_message:
        action: zaqar.queue_post
        input:
          queue_name: <% $.queue_name %>
          messages:
            body:
              name: tripleo.baremetal.v1.introspect
              execution_id: <% execution().id %>
              data:
                status: SUCCESS
                introspected_nodes: <% $.introspected_nodes %>


  # Take a list of nodes and move them through introspection.
  introspect_managable_nodes:
    type: direct

    input:
     - node_uuids
     - queue_name: tripleo

    tasks:

      get_managable_nodes:
        on-success: set_nodes_managed
        action: ironic.node_list maintenance=False associated=False
        publish:
          managed_nodes: <% task(get_managable_nodes).result %>
          #servers_with_name: <% task(get_servers_matching).result._info.where($.name.indexOf(execution().input.server_name) > -1) %>
